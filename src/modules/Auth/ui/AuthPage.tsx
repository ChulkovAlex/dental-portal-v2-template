import React, { useState, useEffect } from 'react'; // üëà –¥–æ–±–∞–≤–∏–ª–∏ useEffect
import { useAuth } from '../model/useAuth';
import { Button } from '@shared/ui/Button';
import { Card } from '@shared/ui/Card';
import { useNavigate } from 'react-router-dom'; // üëà –¥–æ–±–∞–≤–∏–ª–∏ useNavigate
import './AuthPage.css';

export const AuthPage: React.FC = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const { user, loading, login, logout } = useAuth();
  const navigate = useNavigate(); // üëà —Ö—É–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

  // üëá –†–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    if (user) {
      navigate('/dashboard');
    }
  }, [user, navigate]);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    login(email, password);
  };

  if (user) {
    return (
      <div className="auth-container">
        <Card className="auth-card">
          <h2>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.name}!</h2>
          <p>–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ {user.role}.</p>
          <Button variant="outline" onClick={logout} fullWidth>
            –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
          </Button>
        </Card>
      </div>
    );
  }

  return (
    <div className="auth-container">
      <Card className="auth-card">
        <h2>üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
        <p className="auth-subtitle">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ—é —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å</p>
        <form onSubmit={handleSubmit} className="auth-form">
          <div className="form-group">
            <label htmlFor="email">–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</label>
            <input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
              required
              className="input-field"
            />
          </div>
          <div className="form-group">
            <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
            <input
              id="password"
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
              required
              className="input-field"
            />
          </div>
          <Button
            type="submit"
            variant="primary"
            fullWidth
            disabled={loading}
            isLoading={loading}
          >
            –í–æ–π—Ç–∏
          </Button>
        </form>
        <div className="auth-footer">
          <a href="#forgot">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</a>
        </div>
      </Card>
    </div>
  );
};